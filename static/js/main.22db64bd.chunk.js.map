{"version":3,"sources":["constants.js","api/flickr.ts","components/ImageList/ImageList.tsx","hooks/useIntersectionObserver.js","flickr_logo_dots.svg","components/AppHeader/AppHeader.tsx","components/Switch/Switch.tsx","components/ImageEdges/ImageEdges.js","components/Home/Home.tsx","App.js","reportWebVitals.js","index.js"],"names":["CONSTRUCT_BASE_URL","flickrApi","axios","create","baseURL","params","api_key","FLickrApi_sig","format","nojsoncallback","extras","ImageList","query","URLSearchParams","useLocation","search","useState","get","setSearch","isTopBtnHidden","toggleTopBtnShow","debouncedSearch","setDebouncedSearch","useDebounce","history","useHistory","useLayoutEffect","scrollWatcher","window","scrollY","addEventListener","removeEventListener","useEffect","push","useInfiniteQuery","a","pageParam","searchText","rest","page","method","text","res","data","stat","Error","message","getPreviousPageParam","firstPage","photos","undefined","getNextPageParam","perpage","total","isFetchingNextPage","fetchNextPage","hasNextPage","loadMoreButtonRef","React","useRef","root","target","onIntersect","threshold","rootMargin","enabled","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","el","observe","unobserve","useIntersectionObserver","htmlFor","onChange","e","value","placeholder","id","type","pages","className","map","photo","imgUrl","server","secret","to","src","alt","title","onClick","scrollTo","top","behavior","ref","disabled","AppHeader","props","logo","href","rel","Switch","left","right","checked","currentSide","turnSwitch","_onChange","name","ImageEdges","cv","imageInfo","setImageInfo","setImgUrl","size","setSize","isEdge","toggleEdge","useParams","canvasRef","canvasOutput","originalImg","photo_id","getImage","then","URL","img","Image","onload","this","width","height","canvas","canvasout","ctxOutput","getContext","base_image","crossOrigin","setAttribute","drawImage","imread","dst","Mat","cvtColor","COLOR_RGB2GRAY","Canny","imshow","delete","goBack","style","display","_content","Date","dates","posted","toLocaleString","owner","username","marginTop","val","old","Home","queryClient","QueryClient","defaultOptions","queries","retry","App","setCv","QueryClientProvider","client","onLoad","cvLibrary","setTimeout","openCvPath","path","exact","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22db64bd.chunk.js","sourcesContent":["export const AUTHOR_NAME = '@aaegorof'\nexport const AUTHOR_LINK = 'https://github.com/aaegorof'\n\nexport const API_KEY = 'ef1f9d4f8ca80dada31c684364355282'\nexport const FLICKR_SIG = 'd7f57fa9e01a6a2d6ccd8597b8d2f86b'\n\nexport const CONSTRUCT_BASE_URL = 'https://live.staticflickr.com/'\n","import axios from 'axios'\nimport { API_KEY, FLICKR_SIG } from '../constants'\n\nexport const flickrApi = axios.create({\n  baseURL: 'https://www.flickr.com/services/rest',\n  params: {\n    api_key: API_KEY,\n    FLickrApi_sig: FLICKR_SIG,\n    format: 'json',\n    nojsoncallback: 1,\n    extras: 'owner_name,date_upload',\n  },\n})\n\nexport const getFlickrImages = (searchText: string, rest?: any) =>\n  flickrApi.get('', {\n    params: { method: 'flickr.photos.search', text: searchText, ...rest },\n  })\n\nexport const getImage = (id: string, secret: string) =>\n  flickrApi.get('', {\n    params: { method: 'flickr.photos.getInfo', photo_id: id, secret },\n  })\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\nimport { useInfiniteQuery } from 'react-query'\nimport { getFlickrImages } from '../../api/flickr'\nimport { CONSTRUCT_BASE_URL } from '../../constants'\nimport useIntersectionObserver from '../../hooks/useIntersectionObserver'\nimport './imageList.scss'\nimport { useDebounce } from 'react-use'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\ntype Props = {}\n\nconst ImageList: React.FC<Props> = () => {\n  const query = new URLSearchParams(useLocation().search)\n\n  const [search, setSearch] = useState(query.get('search') || '')\n  const [isTopBtnHidden, toggleTopBtnShow] = useState<boolean>(false)\n  const [debouncedSearch, setDebouncedSearch] = useState('')\n\n  useDebounce(\n    () => {\n      setDebouncedSearch(search)\n    },\n    500,\n    [search]\n  )\n\n  let history = useHistory()\n\n  useLayoutEffect(() => {\n    const scrollWatcher = () => {\n      toggleTopBtnShow(window.scrollY < 50)\n    }\n    scrollWatcher()\n    window.addEventListener('scroll', scrollWatcher)\n    return () => window.removeEventListener('scroll', scrollWatcher)\n  }, [])\n\n  useEffect(() => {\n    if (search) {\n      history.push(`/images?search=${search}`)\n    } else {\n      history.push('/images')\n    }\n  }, [search, history])\n\n  const { data, isFetchingNextPage, fetchNextPage, hasNextPage } =\n    useInfiniteQuery(\n      'imageList' + debouncedSearch,\n      async ({ pageParam = 0 }) => {\n        const res = await getFlickrImages(debouncedSearch, { page: pageParam })\n        if (res.data.stat !== 'ok') {\n          throw new Error(res.data.message)\n        }\n        return res.data\n      },\n      {\n        getPreviousPageParam: (firstPage) => {\n          if (!firstPage?.photos) return\n          const { page } = firstPage?.photos\n          const hasPreviousPage = page < 2\n          return hasPreviousPage ? page - 1 : undefined\n        },\n        getNextPageParam: (firstPage) => {\n          if (!firstPage?.photos) return\n          const { page, perpage, total } = firstPage?.photos\n          const hasNextPage = page * perpage < total\n          return hasNextPage ? page + 1 : undefined\n        },\n      }\n    )\n\n  const loadMoreButtonRef = React.useRef(null)\n\n  // @ts-ignore\n  useIntersectionObserver({\n    target: loadMoreButtonRef,\n    onIntersect: fetchNextPage,\n    enabled: hasNextPage,\n  })\n\n  return (\n    <>\n      <p>\n        <label htmlFor=\"search-images\">Search flickr API</label>\n        <input\n          onChange={(e) => setSearch(e.target.value)}\n          value={search}\n          placeholder={'Type to search...'}\n          id={'search-images'}\n          type={'text'}\n        />\n      </p>\n\n      {data?.pages && (\n        <div className={'image-list-wrap'}>\n          {data?.pages.map((page) => (\n            <div className={'image-list'} key={page.photos.page}>\n              {page.photos?.photo.map((photo: any) => {\n                const imgUrl = `${CONSTRUCT_BASE_URL}${photo.server}/${photo.id}_${photo.secret}.jpg`\n                return (\n                  <div className={'image-item'} key={photo.id}>\n                    <Link to={`/edge/${photo.id}`}>\n                      <img src={imgUrl} alt={photo.title}/>\n                    </Link>\n                    <h4>{photo.title}</h4>\n                  </div>\n                )\n              })}\n            </div>\n          ))}\n          <button\n            className={`to-top ${isTopBtnHidden && 'hidden'}`}\n            onClick={() => {\n              window.scrollTo({ top: 0, behavior: 'smooth' })\n            }}\n          >\n            Top\n          </button>\n          <button\n            ref={loadMoreButtonRef}\n            onClick={() => fetchNextPage()}\n            disabled={!hasNextPage || isFetchingNextPage}\n            className={'load-more-btn'}\n          >\n            {isFetchingNextPage\n              ? 'Loading more...'\n              : hasNextPage\n              ? 'Load Newer'\n              : 'Nothing more to load'}\n          </button>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ImageList\n","import React from 'react'\n\nexport default function useIntersectionObserver({\n  root,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = '0px',\n  enabled = true,\n}) {\n  React.useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) =>\n        entries.forEach((entry) => entry.isIntersecting && onIntersect()),\n      {\n        root: root && root.current,\n        rootMargin,\n        threshold,\n      }\n    )\n\n    const el = target && target.current\n\n    if (!el) {\n      return\n    }\n\n    observer.observe(el)\n\n    return () => {\n      observer.unobserve(el)\n    }\n  }, [target.current, enabled])\n}\n","export default __webpack_public_path__ + \"static/media/flickr_logo_dots.e5cc7d38.svg\";","import React from 'react'\nimport './AppHeader.scss'\nimport { Link } from 'react-router-dom'\nimport logo from '../../flickr_logo_dots.svg'\nimport { AUTHOR_LINK, AUTHOR_NAME } from '../../constants'\n\ntype Props = {}\n\nconst AppHeader: React.FC<Props> = (props) => {\n  return (\n    <div className={'app-header-wrap'}>\n      <div className=\"container\">\n        <Link to={'/'}>\n          <img src={logo} className={'logo'} alt=\"logo\" title={'logo'} />\n        </Link>\n        <a href={AUTHOR_LINK} target={'_blank'} rel=\"noreferrer\" className=\"author\">\n          Made by {AUTHOR_NAME}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default AppHeader\n","import React, { FC, useState } from 'react'\nimport './style.scss'\n\ntype Props = {\n  left: string\n  right: string\n  onChange: (t: any) => void\n  checked?: string\n  className?: string\n}\n\nconst Switch: FC<Props> = (props) => {\n  const { left, right, onChange, checked, className } = props\n  const [currentSide, turnSwitch] = useState<string>(checked || left)\n\n  const _onChange = (e: any) => {\n    turnSwitch(e.target.value)\n    onChange(e.target.value)\n  }\n\n  return (\n    <div className={`switch switch--horizontal ${className}`}>\n      <input\n        id=\"on\"\n        type=\"radio\"\n        name=\"switch\"\n        value={left}\n        onChange={_onChange}\n        checked={currentSide === left}\n      />\n      <label htmlFor=\"on\">{left}</label>\n      <input\n        id=\"off\"\n        type=\"radio\"\n        name=\"switch\"\n        value={right}\n        onChange={_onChange}\n        checked={currentSide === right}\n      />\n      <label htmlFor=\"off\">{right}</label>\n      <span className=\"toggle-outside\">\n        <span className=\"toggle-inside\"></span>\n      </span>\n    </div>\n  )\n}\n\nexport default Switch\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getImage } from '../../api/flickr'\nimport { CONSTRUCT_BASE_URL } from '../../constants'\nimport { useHistory } from 'react-router-dom'\nimport './imgeEdges.scss'\nimport Switch from '../Switch/Switch'\n\nconst ImageEdges = ({ cv }) => {\n  const [imageInfo, setImageInfo] = useState(null)\n  const [imgUrl, setImgUrl] = useState('')\n  const [size, setSize] = useState([0, 0])\n  const [isEdge, toggleEdge] = useState(true)\n\n  const { id, secret } = useParams()\n\n  const canvasRef = useRef(null)\n  const canvasOutput = useRef(null)\n  const originalImg = useRef(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (id) {\n      getImage(id, secret).then((res) => {\n        const imageInfo = res.data.photo\n        setImageInfo(imageInfo)\n        const URL = `${CONSTRUCT_BASE_URL}${imageInfo?.server}/${imageInfo?.id}_${imageInfo?.secret}.jpg`\n        setImgUrl(URL)\n        const img = new Image()\n        img.src = URL\n        img.onload = function () {\n          setSize([this.width, this.height])\n        }\n      })\n    }\n  }, [id, secret])\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      if (cv && imageInfo && imgUrl && size[0]) {\n        const canvas = canvasRef.current\n        const canvasout = canvasOutput.current\n        // @ts-ignore\n        const ctxOutput = canvas.getContext('2d')\n        const base_image = new Image()\n        base_image.src = imgUrl\n        base_image.crossOrigin = 'Anonymous'\n        base_image.setAttribute('crossOrigin', '')\n        base_image.onload = function () {\n          ctxOutput.drawImage(base_image, 0, 0)\n          const src = cv.imread(canvas.id)\n          const dst = new cv.Mat()\n          cv.cvtColor(src, src, cv.COLOR_RGB2GRAY, 0)\n          // You can try more different parameters\n          cv.Canny(src, dst, 50, 100, 3, false)\n          cv.imshow(canvasout.id, dst)\n          // ctxOutput.drawImage(dst)\n          src.delete()\n          dst.delete()\n        }\n      }\n    }\n  }, [imageInfo, cv, imgUrl, size])\n\n  return (\n    <div className={'image-edges-wrap'}>\n      <h3>\n        <a onClick={() => history.goBack()} className={'go-back'}>\n          {' '}\n          Back to search results\n        </a>\n      </h3>\n      <div className=\"image-card\">\n        <div className=\"img-wrap\">\n          <img src={imgUrl} id=\"cvImage\" ref={originalImg} />\n          <canvas\n            ref={canvasRef}\n            id={'thecanvasId'}\n            width={size[0]}\n            height={size[1]}\n            style={{ display: 'none' }}\n          />\n          <canvas\n            ref={canvasOutput}\n            id={'thecanvasOutId'}\n            width={size[0]}\n            height={size[1]}\n            style={{ display: isEdge ? 'initial' : 'none' }}\n          />\n        </div>\n        {imageInfo && (\n          <div className=\"photo-info\">\n            <p>\n              <strong>Title: </strong> {imageInfo.title._content}\n            </p>\n            <p>\n              <strong>Posted date: </strong>\n              {new Date(imageInfo.dates.posted * 1000).toLocaleString()}\n            </p>\n            <p>\n              <strong>Owner: </strong>\n              {imageInfo.owner.username}\n            </p>\n\n            <p style={{ marginTop: 50 }}>\n              You can switch the edge detection\n              <Switch\n                left={'On'}\n                right={'Off'}\n                onChange={(val) => toggleEdge((old) => !old)}\n              />\n            </p>\n          </div>\n        )}\n      </div>\n\n      <div>\n        <div className=\"inputoutput\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageEdges\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './styles.scss'\n\ntype Props = {}\n\nconst Home: React.FC<Props> = (props) => {\n  return (\n    <div className={'home-wrap'}>\n      <div className=\"say-hi\">\n        <div>\n          This is home page. Not too much to see here, but give it a try.\n        </div>\n        <Link to={'images'} className={'btn'}>\n          Search for images\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import { QueryClient, QueryClientProvider } from 'react-query'\nimport ImageList from './components/ImageList/ImageList'\nimport AppHeader from './components/AppHeader/AppHeader'\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom'\nimport ImageEdges from './components/ImageEdges/ImageEdges'\n\nimport './styles/common.scss'\nimport { OpenCvProvider } from 'opencv-react'\nimport React, { useState } from 'react'\nimport Home from './components/Home/Home'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 0,\n    },\n  },\n})\n\nfunction App() {\n  const [cv, setCv] = useState(null)\n  const onLoaded = (cvLibrary) => {\n    setTimeout(function () {\n      setCv(window.cv)\n    }, 500)\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <OpenCvProvider onLoad={onLoaded} openCvPath={'./libraries/opencv.js'}>\n        <HashRouter>\n          <AppHeader />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact children={<Home />} />\n              <Route path=\"/images\" children={<ImageList />} />\n              <Route path=\"/edge/:id\" exact children={<ImageEdges cv={cv} />} />\n              <Route path=\"*\" children={<Home />} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </OpenCvProvider>\n    </QueryClientProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}